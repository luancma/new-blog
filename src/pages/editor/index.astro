---
import "./styles.css";
---

<!-- Quill Editor Container -->
<head>
  <script src="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.js"></script>
  <link
    href="https://cdn.jsdelivr.net/npm/quill@2.0.3/dist/quill.snow.css"
    rel="stylesheet"
  />

  <script
    src="https://cdn.jsdelivr.net/npm/quilljs-markdown@latest/dist/quilljs-markdown.js"
  ></script>
  <link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/quilljs-markdown@latest/dist/quilljs-markdown-common-style.css"
  />
</head>
<div class="form">
  <input type="text" id="title" placeholder="Título" />
  <input type="text" id="author" placeholder="Autor" />
  <input type="text" id="author-description" placeholder="Descrição do autor" />
  <input type="text" id="description" placeholder="Description" />
  <input type="text" id="tags" placeholder="Tags" />
  <input type="text" id="links" placeholder="Links" />
  <input type="text" id="main-tag" placeholder="Main tag" />
  <input type="file" id="img" name="img" accept="image/*" />
  <img
    id="imageOutput"
    src=""
    alt="Converted Image"
    style="max-width: 100%; height: auto; display: none;"
  />

  <div id="editor" style="height: 300px;"></div>
</div>
<button id="send-btn" class="send-btn">Enviar</button>

<style>
  .form {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-top: 50px;
    max-width: 800px;
    margin: 0 auto;
  }

  .form input {
    margin: 10px;
    padding: 10px;
    width: 300px;
    border: 1px solid #ccc;
    border-radius: 5px;
  }

  .send-btn {
    margin-top: 20px;
    padding: 10px;
    width: 300px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #007bff;
    color: white;
    cursor: pointer;
  }

  #editor {
    width: 100%;
    height: 300px;
    border: 1px solid #ccc;
    border-radius: 5px;
  }

  .send-btn:hover {
    background-color: #0056b3;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const image = document.getElementById("img") as HTMLInputElement;
    let outputImage = "";

    const toolbarOptions = [
      ["bold", "italic", "underline", "strike"], // toggled buttons
      ["blockquote", "code-block"],
      ["link", "image", "formula"],
      [{ header: 1 }, { header: 2 }, { header: 3 }],
      [{ align: [] }],
      [{ list: "ordered" }, { list: "bullet" }, { list: "check" }],
      [{ indent: "-1" }, { indent: "+1" }], // outdent/indent
      // [{ direction: "rtl" }], // text direction
      // [{ size: ["small", false, "large", "huge"] }], // custom dropdown
      [{ header: [1, 2, 3, 4, 5, 6, false] }],
      [{ color: [] }, { background: [] }], // dropdown with defaults from theme
      [{ font: [] }],
      ["clean"], // remove formatting button
    ];

    const editor = new Quill("#editor", {
      theme: "snow",
      modules: {
        toolbar: toolbarOptions,
      },
    });

    // Listen for content changes (optional)
    editor.on("text-change", () => {
      console.log(editor.root.innerHTML);
    });

    new QuillMarkdown(editor);

    const sendBtn = document.getElementById("send-btn");

    image?.addEventListener("change", () => {
      const file = image.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
          const base64 = e.target.result;
          if (base64) {
            const output = document.getElementById("imageOutput");
            outputImage = base64;
            output.src = base64;
            output.style.display = "block";
          }
        };
        reader.readAsDataURL(file);
      }
    });

    sendBtn?.addEventListener("click", async () => {
      const formData = new FormData();
      const editor = document.querySelector(".ql-editor");
      const title = (document.getElementById("title") as HTMLInputElement)
        ?.value;
      const author = (document.getElementById("author") as HTMLInputElement)
        ?.value;
      const description = (
        document.getElementById("description") as HTMLInputElement
      )?.value;
      const tags = (document.getElementById("tags") as HTMLInputElement)?.value;
      const links = (document.getElementById("links") as HTMLInputElement)
        ?.value;
      const mainTag = (document.getElementById("main-tag") as HTMLInputElement)
        ?.value;
      const authorDescription = (
        document.getElementById("author-description") as HTMLInputElement
      )?.value;
      const content = editor ? editor.innerHTML : "";
      const file = image?.files && image?.files[0];
      const imageType = file?.type.split("/")[1];

      if (file) {
        formData.append("file", file);
        formData.append("filename", `${title}.${imageType}`);
      }

      const uploadImageResponse = await fetch("http://localhost:3000/upload", {
        method: "POST",
        body: formData,
      });

      if (!uploadImageResponse.ok) {
        alert("Erro ao fazer upload da imagem");
        return;
      }

      const mainRequestResult = await fetch("http://localhost:3000/create-md", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          title,
          author,
          description,
          tags: tags.split(","),
          links,
          primaryTag: mainTag,
          authorDescription,
          content,
          imageName: `${title}.${imageType}`,
        }),
      });

      if (mainRequestResult.ok) {
        alert("Post criado com sucesso!");
      } else {
        console.error(mainRequestResult);
        alert("Erro ao criar post");
      }
    });
  });
</script>
